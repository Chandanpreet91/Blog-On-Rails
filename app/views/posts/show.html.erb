
  <div class='clearfix'>
    <h1 class='float-left'>
      <span class='badge badge-pill badge-info'>
        <%= @post.id %>
      </span>
      <%= @post.title %>
    </h1>
  </div>
  
  <hr/>
  <p class='shadow-none p-3 rounded'><%= @post.body %></p>
  <div>
    <%# link_to() just creates a anchor tag with the appropriate href. The 3rd argument is a optional options hash which can have a :method key; If a :method key is provided Rails will set a data-method attribute to the a tag and adds some additional javascript to the page which makes the anchor tag use the specified http method instead of the default GET. (Basically Rails Magic) 
    <%# https://api.rubyonrails.org/classes/ActionView/Helpers/UrlHelper.html#method-i-link_to %>
    <%# passing a value (number/string) to a helper method like `product_path` will return a path with the value appended to the path. Helper paths automatically grab and use the id if it's given a instance %>
    <%= link_to "Edit", edit_post_path(@post), class: 'btn btn-info'%>
    <%= link_to(
      "Delete",
      post_path(@post),
      method: :delete,
      class: 'btn btn-danger',
      data: { confirm: 'are you sure?' },
      )
    %>
    
    <%= form_with model: [@post, @comment], local: true do |f| %>
    
    <div class='form-group'>
      
      <%= f.label :body %>
      <%= f.text_area(:body, class: 'form-control', placeholder: 'Your thoughts here' )%>
    </div>
    <%= f.submit class: 'btn btn-primary' %>
  <% end %>
</div>

  <% @comments.each do |a| %>
    <li>
      <%= a.body %>
      <p>
      Commented <%= time_ago_in_words(a.created_at)%>
      <%= link_to(
        "Delete",
        post_comment_path(@post, a),
        method: :delete,
        data: {
          confirm: "are you sure you want to delete this delete?"
        }
      )%>
      
      </p>
    </li>
    <% end %>
</ul>


